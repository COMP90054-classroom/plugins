{
  "name": "pddl",
  "displayName": "PDDL",
  "description": "Planning Domain Description Language support",
  "author": "Jan Dolejsi",
  "license": "MIT",
  "version": "2.4.2",
  "publisher": "jan-dolejsi",
  "engines": {
    "vscode": "^1.18.0"
  },
  "categories": [
    "Other",
    "Languages"
  ],
  "keywords": [
    "PDDL",
    "planning",
    "AI"
  ],
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#ff402b",
    "theme": "light"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jan-dolejsi/vscode-pddl"
  },
  "activationEvents": [
    "onLanguage:pddl"
  ],
  "main": "./out/client/src/extension",
  "contributes": {
    "languages": [
      {
        "id": "pddl",
        "aliases": [
          "PDDL",
          "pddl"
        ],
        "extensions": [
          ".pddl",
          ""
        ],
        "configuration": "./language-configuration.json",
        "firstLine": "\\(define\\s\\((domain|problem)\\b"
      }
    ],
    "grammars": [
      {
        "language": "pddl",
        "scopeName": "source.pddl",
        "path": "./syntaxes/pddl.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "pddl",
        "path": "./snippets/pddl.json"
      }
    ],
    "commands": [
      {
        "command": "pddl.planAndDisplayResult",
        "title": "PDDL: Run the planner and display the plan"
      },
      {
        "command": "pddl.stopPlanner",
        "title": "PDDL: Stop planner"
      },
      {
        "command": "pddl.configureParser",
        "title": "PDDL: Configure parser"
      },
      {
        "command": "pddl.loginParserService",
        "title": "PDDL: Login for parser service"
      },
      {
        "command": "pddl.configurePlanner",
        "title": "PDDL: Configure planner"
      },
      {
        "command": "pddl.planReport",
        "title": "PDDL: Generate plan report"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "pddl.planAndDisplayResult",
          "when": "resourceLangId == pddl"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "PDDL parser and planner configuration",
      "properties": {
        "pddlParser.executableOrService": {
          "scope": "resource",
          "type": "string",
          "description": "PDDL parser for syntactical analysis. Specify executable location or service URL e.g. parser.exe, validate.exe, or http://localhost:8090/parse."
        },
        "pddlParser.executableOptions": {
          "scope": "resource",
          "type": "string",
          "description": "Override the command-line options passed to the PDDL parser configured in 'pddlParser.executableOrService'.",
          "pattern": "^\\$\\(parser\\).+\\$\\(domain\\).+\\$\\(problem\\).*$",
          "default": "$(parser) $(domain) $(problem)"
        },
        "pddlParser.problemPattern": {
          "scope": "resource",
          "type": "string",
          "description": "Pattern to match onto the parser output to extract the parsing problems. The syntax must be: '/regex/flags/order'. See more info at https://github.com/jan-dolejsi/vscode-pddl/wiki/Configuring-the-PDDL-parser"
        },
        "pddlParser.pddlParserService": {
          "scope": "resource",
          "type": "string",
          "description": "Obsolete: please remove configuration values manually."
        },
        "pddlParser.serviceAuthenticated": {
          "scope": "resource",
          "type": "boolean",
          "description": "PDDL parser requires authentication."
        },
        "pddlParser.authenticationUrl": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication URL."
        },
        "pddlParser.authenticationRequestEncoded": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication request encoded."
        },
        "pddlParser.authenticationClientId": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication clientid."
        },
        "pddlParser.authenticationTokensvcUrl": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication token service URL."
        },
        "pddlParser.authenticationTokensvcApiKey": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication token service API Key."
        },
        "pddlParser.authenticationTokensvcAccessPath": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication token service access path."
        },
        "pddlParser.authenticationTokensvcValidatePath": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication token service validate path."
        },
        "pddlParser.authenticationTokensvcCodePath": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication token service code path."
        },
        "pddlParser.authenticationTokensvcRefreshPath": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication token service refresh path."
        },
        "pddlParser.authenticationTokensvcSvctkPath": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication token service svctk path."
        },
        "pddlParser.authenticationRefreshToken": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication refresh token."
        },
        "pddlParser.authenticationAccessToken": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication access token."
        },
        "pddlParser.authenticationSToken": {
          "scope": "resource",
          "type": "string",
          "description": "Authentication s token."
        },
        "pddlParser.delayInSecondsBeforeParsing": {
          "scope": "resource",
          "type": "number",
          "default": 3,
          "minimum": 1,
          "description": "Delay in seconds the Language Server should wait after a PDDL file is modified before calls the parser."
        },
        "pddlParser.maxNumberOfProblems": {
          "scope": "resource",
          "type": "number",
          "default": 100,
          "minimum": 1,
          "description": "Controls the maximum number of problems produced by the server."
        },
        "pddlParser.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VSCode and the language server."
        },
        "pddlPlanner.executableOrService": {
          "scope": "resource",
          "type": "string",
          "title": "Planner executable or service URL",
          "default": "http://solver.planning.domains/solve",
          "description": "Enter the planner executable (e.g. planner.exe) with full path unless you have its location included in the %path% environment variable. If you are using a parsing service, make sure it starts with http: or https:"
        },
        "pddlPlanner.executableOptions": {
          "scope": "resource",
          "type": "string",
          "description": "Override the command-line options passed to the PDDL planner configured in 'pddlPlanner.executableOrService'.",
          "pattern": "^\\$\\(planner\\).+\\$\\(options\\).+\\$\\(domain\\).+\\$\\(problem\\).*$",
          "default": "$(planner) $(options) $(domain) $(problem)"
        },
        "pddlPlanner.epsilonTimeStep": {
          "scope": "resource",
          "type": "number",
          "default": 0.001,
          "title": "Default epsilon time step used by your planner.",
          "description": "Default epsilon time step used by your planner. This is used when interpreting/visualizing the plan. "
        },
        "pddlPlanner.valueSeqPath": {
          "type": "string",
          "description": "ValueSeq path - the tool that evaluates numeric values of functions at starts and ends of actions in the plan."
        }
      }
    }
  },
  "scripts": {
    "postinstall": "node ./node_modules/vscode/bin/install",
    "compile": "tsc -p ./",
    "watch": "tsc -w -p ./",
    "vscode:prepublish": "npm run compile",
    "update-vscode": "node ./node_modules/vscode/bin/install"
  },
  "dependencies": {
    "@types/request": "^2.0.5",
    "@types/tmp": "^0.0.33",
    "child-process-data": "^0.5.5",
    "opn": "^5.1.0",
    "request": "^2.83.0",
    "tmp": "^0.0.33",
    "tree-kill": "^1.2.0",
    "vscode": "^1.1.10",
    "vscode-languageclient": "^3.5.0"
  },
  "devDependencies": {
    "typescript": "^2.6.2"
  }
}

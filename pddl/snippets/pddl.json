{
  "domain": {
    "prefix": "domain",
    "body": [
      ";Header and description",
      "",
      "(define (domain domainName)",
      "",
      ";remove requirements that are not needed",
      "(:requirements :strips :fluents :durative-actions :timed-initial-literals :typing :conditional-effects :negative-preconditions :duration-inequalities)",
      "",
      "(:types childType1 childType2 - parentType)",
      "",
      "(:constants childA childB - childType1 ",
      ")",
      "",
      "(:predicates (predicate1 ?c - childType1) ",
      ")",
      "",
      "",
      "(:functions (function1 ?c - childType2)",
      ")",
      "",
      ";define actions here",
      "",
      ")"
    ],
    "description": "Define domain"
  },
  "action": {
    "prefix": "action",
    "body": [
        "\t(:action start_rotation",
        "\t :parameters ()",
        "\t :precondition (and (not(predicate1))(predicate2))",
        "\t :effect (and (predicate1)))",
        ""
    ],
    "description": "Creates an instantaneous action"
  },
  "durativeaction": {
    "prefix": "action-durative",
    "body": [
        "\t\t(:durative-action\tstart_rotation",
        "\t:parameters\t(?t\ttype1)",
        "\t:duration\t(=\t?duration\t1)",
        "\t:condition\t(and\t",
        "\t\t(at\tstart\t(not(predicate1)))",
        "\t\t(over\tall\t(predicate2))",
        "\t\t(at\tend\t(predicate3))",
      "\t)",
        "\t:effect\t(and\t",
      "\t\t(at\tend(predicate1))",
        "\t\t(at\tstart\t(not\t(predicate2)))",
            "\t\t(increase\t(function1)\t(*\t#t\t(function2\t?t)))\t\t",
      "\t)",
      ")",
      ""
    ],
    "description": "Creates a durative action" 
  }
}